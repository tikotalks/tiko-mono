{
  "permissions": {
    "allow": [
      "WebFetch(domain:github.com)",
      "WebFetch(domain:raw.githubusercontent.com)",
      "Bash(mkdir:*)",
      "Bash(pnpm install:*)",
      "Bash(pnpm dev:*)",
      "Bash(pnpm build:*)",
      "Bash(npm run build:timer:*)",
      "Bash(npm run:*)",
      "Bash(npm install:*)",
      "Bash(pnpm add:*)",
      "WebFetch(domain:www.npmjs.com)",
      "Bash(ls:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(rm:*)",
      "Bash(pnpm run:*)",
      "Bash(mv:*)",
      "Bash(find:*)",
      "Bash(nx build:*)",
      "Bash(npx nx build:*)",
      "Bash(pnpm serve:*)",
      "WebFetch(domain:gitlab.com)",
      "Bash(pnpm vite:*)",
      "Bash(npx vite:*)",
      "Bash(rg:*)",
      "Bash(npx nx serve:*)",
      "Bash(npx nx reset:*)",
      "Bash(npx nx g:*)",
      "Bash(true)",
      "Bash(grep:*)",
      "Bash(git push:*)",
      "Bash(pnpm nx build:*)",
      "Bash(cp:*)",
      "Bash(npx cap:*)",
      "Bash(pnpm --filter todo build)",
      "Bash(pkill:*)",
      "Bash(npx tsc:*)",
      "Bash(node:*)",
      "Bash(npx nx run:*)",
      "Bash(npx vue-tsc:*)",
      "Bash(sips:*)",
      "Bash(chmod:*)",
      "Bash(git filter-branch:*)",
      "Bash(pnpm --filter tiko typecheck)",
      "Bash(pnpm --filter tiko build)",
      "Bash(pnpm --filter tiko run build --no-typecheck)",
      "Bash(npm test)",
      "Bash(npm test:*)",
      "Bash(pnpm test:*)",
      "Bash(npx nx:*)",
      "Bash(git restore:*)",
      "Bash(npx supabase:*)",
      "Bash(git reset:*)",
      "Bash(git checkout:*)",
      "WebFetch(domain:supabase.com)",
      "Bash(git branch:*)",
      "Bash(git stash push:*)",
      "Bash(FILTER_BRANCH_SQUELCH_WARNING=1 ./remove-coauthor.sh)",
      "Bash(pnpm check:i18n:*)",
      "Bash(pnpm -w run check:i18n)",
      "Bash(sed:*)",
      "Bash(diff:*)",
      "Bash(git mv:*)",
      "Bash(pnpm -F @tiko/ui build)",
      "Bash(pnpm typecheck:*)",
      "Bash(timeout:*)",
      "Bash(pnpm lint:*)",
      "Bash(pnpm --filter=@tiko/core test)",
      "Bash(cat:*)",
      "Bash(npx cypress run:*)",
      "Bash(pnpm nx run:*)",
      "Bash(pnpm list:*)",
      "Bash(npm view:*)",
      "Bash(pnpm nx run:*)",
      "Bash(pnpm i18n:add:*)",
      "Bash(pnpm --filter admin build)",
      "Bash(pnpm --filter @tiko/ui build)",
      "Bash(pnpm --filter @tiko/core build)",
      "Bash(pnpm --filter admin dev)",
      "Bash(killall:*)",
      "Bash(touch:*)",
      "Bash(pnpm --filter=@tiko/ui build)",
      "Bash(pnpm --filter=admin build)",
      "Bash(pnpm --filter=@tiko/core build)",
      "Bash(psql:*)",
      "Bash(git remote set-url:*)",
      "Bash(./scripts/setup-cloudflare-files.sh:*)",
      "Bash(pnpm cache:clean:*)",
      "Bash(pnpm --filter=marketing build)",
      "Bash(pnpm --filter yes-no build)",
      "Bash(pnpm --filter yes-no dev)",
      "Bash(gh run list:*)",
      "Bash(gh run view:*)",
      "Bash(gh workflow run:*)",
      "Bash(echo:*)",
      "Bash(pnpm --filter yes-no build)",
      "Bash(pnpm --filter=type build)",
      "Bash(pnpm --filter=marketing build)",
      "Bash(pnpm update:*)",
      "Bash(pnpm cache:*)",
      "Bash(npx wrangler pages deploy:*)",
      "Bash(npx wrangler pages project:*)",
      "Bash(pnpm -w run build:packages)",
      "Bash(pnpm deploy:*)",
      "Bash(curl:*)",
      "Bash(npx wrangler:*)",
      "Bash(git stash show:*)",
      "Bash(kill:*)",
      "Bash(bash:*)",
      "Bash(./fix-remaining-imports.sh)",
      "Bash(pnpm i18n:*)",
      "Bash(npx eslint:*)",
      "Bash(pnpm:*)",
      "Bash(wrangler deploy:*)",
      "Bash(for app in timer yes-no todo radio type)",
      "Bash(do)",
      "Bash(done)",
      "Bash(vue-tsc:*)",
      "Bash(wrangler r2 bucket create:*)",
      "Bash(zsh:*)",
      "Bash(wrangler secret:*)",
      "WebFetch(domain:cards.tikoapps.org)",
      "Bash(./set-secret.sh)",
      "WebFetch(domain:m-izadmehr.github.io)",
      "Bash(npx deadfile:*)",
      "Bash(npm search:*)",
      "Bash(open http://localhost:5001/updates)",
      "Bash(open http://localhost:3003)"
    ],
    "deny": []
  }
}
