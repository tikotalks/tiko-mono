.content {
	>p {
		line-height: 1.75;

		&:first-of-type {
			font-size: 1.1em;
		}
	}

	>* {
		&+* {
			margin-top: var(--space);
		}
	}

	dl:not([class]) {
		display: flex;
		flex-direction: column;
		gap: var(--space-xs);

		dd+dt {
			margin-top: .5em;
		}

		&:has(dt ~ dt) {
			dt {
				font-weight: bold;
			}

			dd {
				font-weight: 300;
				opacity: 0.75;
			}
		}
	}
}

ul:not([class]) {
	counter-reset: list;

	dd+dt {
		margin-top: 1em;
	}

	&:has(ul > li) {
		li {
			counter-increment: name;

			&::before {
				content: counter(name) '.';
				margin-right: 0.5em;
			}
		}

	}
}


a {
	color: currentColor;
	text-decoration: none;
}

h1 {
	font-size: calc(var(--spacing) * 0.75);
}

.dot {
	width: var(--dot-size, 0.5em);
	height: var(--dot-size, 0.5em);
	border-radius: 50%;
	display: block;
	background-color: var(--dot-color, currentColor);
}

hr {
	width: 100%;
	height: 2px;
	background-color: var(--accent);
	color: var(--accent);
	border: none;
}


p code:not([class]){
	max-width: 100%; width: fit-content; border-radius:calc(var(--border-radius) / 2);
	overflow: hidden;
	text-overflow: ellipsis;

display: inline-block;
}
