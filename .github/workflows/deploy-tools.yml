name: Deploy Tools to Cloudflare Pages

on:
  push:
    branches:
      - master
  workflow_dispatch:
    inputs:
      target:
        description: 'Target tool to deploy (admin, ui-docs, or all)'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - admin
          - ui-docs
      message:
        description: 'Deployment message'
        required: false
        default: 'Manual deployment from admin dashboard'

jobs:
  check-triggers:
    runs-on: ubuntu-latest
    outputs:
      should-build: ${{ steps.check.outputs.should-build }}
      build-admin: ${{ steps.check.outputs.build-admin }}
      build-ui-docs: ${{ steps.check.outputs.build-ui-docs }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
          
      - name: Check triggers
        id: check
        run: |
          # Default to no builds
          echo "should-build=false" >> $GITHUB_OUTPUT
          echo "build-admin=false" >> $GITHUB_OUTPUT
          echo "build-ui-docs=false" >> $GITHUB_OUTPUT
          
          # Handle workflow_dispatch trigger
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            TARGET="${{ github.event.inputs.target }}"
            echo "Workflow dispatch target: $TARGET"
            
            if [[ "$TARGET" == "all" ]]; then
              echo "should-build=true" >> $GITHUB_OUTPUT
              echo "build-admin=true" >> $GITHUB_OUTPUT
              echo "build-ui-docs=true" >> $GITHUB_OUTPUT
            elif [[ "$TARGET" == "admin" ]]; then
              echo "build-admin=true" >> $GITHUB_OUTPUT
              echo "should-build=true" >> $GITHUB_OUTPUT
            elif [[ "$TARGET" == "ui-docs" ]]; then
              echo "build-ui-docs=true" >> $GITHUB_OUTPUT
              echo "should-build=true" >> $GITHUB_OUTPUT
            fi
            exit 0
          fi
          
          # Handle push trigger - check commit message
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          echo "Commit message: $COMMIT_MSG"
          
          # Check for build all triggers
          if [[ "$COMMIT_MSG" == *"[build:all]"* ]] || [[ "$COMMIT_MSG" == *"[build:tools]"* ]]; then
            echo "should-build=true" >> $GITHUB_OUTPUT
            echo "build-admin=true" >> $GITHUB_OUTPUT
            echo "build-ui-docs=true" >> $GITHUB_OUTPUT
            exit 0
          fi
          
          # Check for specific tool triggers
          if [[ "$COMMIT_MSG" == *"[build:admin]"* ]]; then
            echo "build-admin=true" >> $GITHUB_OUTPUT
            echo "should-build=true" >> $GITHUB_OUTPUT
          fi
          if [[ "$COMMIT_MSG" == *"[build:ui-docs]"* ]]; then
            echo "build-ui-docs=true" >> $GITHUB_OUTPUT
            echo "should-build=true" >> $GITHUB_OUTPUT
          fi

  check-environment:
    needs: check-triggers
    if: needs.check-triggers.outputs.should-build == 'true'
    runs-on: ubuntu-latest
    name: Check Required Environment Variables
    steps:
      - name: Check Cloudflare API Token
        run: |
          if [ -z "${{ secrets.CLOUDFLARE_API_TOKEN }}" ]; then
            echo "❌ ERROR: Missing required secret CLOUDFLARE_API_TOKEN"
            echo "Please add this secret in GitHub Settings > Secrets and variables > Actions"
            exit 1
          fi
          echo "✅ CLOUDFLARE_API_TOKEN is configured"
      
      - name: Check Supabase Environment Variables
        run: |
          MISSING_VARS=""
          
          if [ -z "${{ secrets.VITE_SUPABASE_URL }}" ]; then
            MISSING_VARS="$MISSING_VARS VITE_SUPABASE_URL"
          fi
          
          if [ -z "${{ secrets.VITE_SUPABASE_ANON_KEY }}" ]; then
            MISSING_VARS="$MISSING_VARS VITE_SUPABASE_ANON_KEY"
          fi
          
          if [ -n "$MISSING_VARS" ]; then
            echo "❌ ERROR: Missing required Supabase secrets:"
            for var in $MISSING_VARS; do
              echo "  - $var"
            done
            echo ""
            echo "Please add these secrets in GitHub Settings > Secrets and variables > Actions"
            exit 1
          fi
          
          echo "✅ Supabase environment variables are configured"

  deploy-admin:
    needs: [check-triggers, check-environment]
    if: needs.check-triggers.outputs.build-admin == 'true'
    runs-on: ubuntu-latest
    name: Deploy Admin Tool
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: Build Admin tool
        run: |
          pnpm --filter=@tiko/ui build
          pnpm --filter=@tiko/core build
          pnpm --filter=admin build
        env:
          VITE_SUPABASE_URL: ${{ secrets.VITE_SUPABASE_URL }}
          VITE_SUPABASE_ANON_KEY: ${{ secrets.VITE_SUPABASE_ANON_KEY }}
      
      - name: Install Wrangler
        run: npm install -g wrangler
        
      - name: Create Pages project if needed
        run: |
          wrangler pages project create tiko-admin --production-branch=master || echo "Project already exists"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: dc2b7d14a69351375cab6de9a13ddee9
          
      - name: Deploy to Cloudflare Pages
        run: wrangler pages deploy ./tools/admin/dist --project-name=tiko-admin
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: dc2b7d14a69351375cab6de9a13ddee9

  deploy-ui-docs:
    needs: [check-triggers, check-environment]
    if: needs.check-triggers.outputs.build-ui-docs == 'true'
    runs-on: ubuntu-latest
    name: Deploy UI Docs
    steps:
      - uses: actions/checkout@v4
      
      - uses: pnpm/action-setup@v2
        with:
          version: 8
          
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'pnpm'
          
      - name: Install dependencies
        run: pnpm install --no-frozen-lockfile
        
      - name: Build UI Docs
        run: |
          pnpm --filter=@tiko/ui build
          pnpm --filter=@tiko/ui-docs build
          
      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: dc2b7d14a69351375cab6de9a13ddee9
          command: pages deploy ./tools/ui-docs/dist --project-name=tiko-ui-docs --compatibility-date=2024-08-02